{
  "openapi": "3.0.0",
  "info": {
    "title": "Book Shop API",
    "version": "1.0.0",
    "description": "API for managing books and authors in a book shop"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    },
    {
      "url": "https://bookshop-api.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Books",
      "description": "Operations related to books"
    },
    {
      "name": "Authors",
      "description": "Operations related to authors"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's full name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "description": "User's password (minimum 8 characters)",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user profile",
        "description": "Get the profile of the currently authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "description": "Logout the currently authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Google OAuth login",
        "description": "Initiate Google OAuth authentication",
        "responses": {
          "302": {
            "description": "Redirect to Google OAuth"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/google/callback": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Google OAuth callback",
        "description": "Handle Google OAuth callback",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "OAuth authorization code",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication successful"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/books": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "description": "Returns a list of all books with optional filtering",
        "parameters": [
          {
            "name": "genre",
            "in": "query",
            "description": "Filter books by genre",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Filter books with price greater than or equal to this value",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Filter books with price less than or equal to this value",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search books by title or description",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooksResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Books"],
        "summary": "Create a new book",
        "description": "Adds a new book to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "ISBN already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/books/{id}": {
      "get": {
        "tags": ["Books"],
        "summary": "Get a book by ID",
        "description": "Returns a single book by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the book to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update a book",
        "description": "Updates an existing book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the book to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Book not found"
          },
          "409": {
            "description": "ISBN already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book",
        "description": "Deletes a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the book to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/authors": {
      "get": {
        "tags": ["Authors"],
        "summary": "Get all authors",
        "description": "Returns a list of all authors",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Authors"],
        "summary": "Create a new author",
        "description": "Adds a new author to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Author created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/authors/{id}": {
      "get": {
        "tags": ["Authors"],
        "summary": "Get an author by ID",
        "description": "Returns a single author by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the author to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          },
          "404": {
            "description": "Author not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Authors"],
        "summary": "Update an author",
        "description": "Updates an existing author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the author to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Author updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Author not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Authors"],
        "summary": "Delete an author",
        "description": "Deletes an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the author to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Author deleted successfully"
          },
          "404": {
            "description": "Author not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The auto-generated ID of the user",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "john.doe@example.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The auto-generated ID of the book"
          },
          "title": {
            "type": "string",
            "description": "Title of the book",
            "example": "The Great Gatsby"
          },
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "isbn": {
            "type": "string",
            "description": "ISBN of the book",
            "example": "978-3-16-148410-0"
          },
          "price": {
            "type": "number",
            "description": "Price of the book",
            "example": 12.99
          },
          "publicationYear": {
            "type": "integer",
            "description": "Year the book was published",
            "example": 1925
          },
          "genre": {
            "type": "string",
            "description": "Genre of the book",
            "example": "Fiction"
          },
          "stockQuantity": {
            "type": "integer",
            "description": "Number of copies in stock",
            "example": 50
          },
          "description": {
            "type": "string",
            "description": "Description of the book",
            "example": "A story of wealth, love, and the American Dream in the 1920s"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the book was added to the database"
          }
        }
      },
      "BookInput": {
        "type": "object",
        "required": ["title", "author", "isbn", "price", "publicationYear", "genre"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the book",
            "example": "The Great Gatsby"
          },
          "author": {
            "type": "string",
            "description": "ID of the author",
            "example": "507f1f77bcf86cd799439011"
          },
          "isbn": {
            "type": "string",
            "description": "ISBN of the book",
            "example": "978-3-16-148410-0"
          },
          "price": {
            "type": "number",
            "description": "Price of the book",
            "example": 12.99
          },
          "publicationYear": {
            "type": "integer",
            "description": "Year the book was published",
            "example": 1925
          },
          "genre": {
            "type": "string",
            "description": "Genre of the book",
            "example": "Fiction"
          },
          "stockQuantity": {
            "type": "integer",
            "description": "Number of copies in stock",
            "example": 50
          },
          "description": {
            "type": "string",
            "description": "Description of the book",
            "example": "A story of wealth, love, and the American Dream in the 1920s"
          }
        }
      },
      "BooksResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of books returned"
          },
          "books": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      },
      "Author": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The auto-generated ID of the author"
          },
          "name": {
            "type": "string",
            "description": "Name of the author",
            "example": "F. Scott Fitzgerald"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "description": "Birth date of the author",
            "example": "1896-09-24"
          },
          "nationality": {
            "type": "string",
            "description": "Nationality of the author",
            "example": "American"
          },
          "biography": {
            "type": "string",
            "description": "Biography of the author",
            "example": "Francis Scott Key Fitzgerald was an American novelist, essayist, and short story writer."
          },
          "website": {
            "type": "string",
            "description": "Website of the author",
            "example": "https://www.fscottfitzgerald.com"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the author is active",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the author was added to the database"
          }
        }
      },
      "AuthorInput": {
        "type": "object",
        "required": ["name", "birthDate", "nationality"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the author",
            "example": "F. Scott Fitzgerald"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "description": "Birth date of the author",
            "example": "1896-09-24"
          },
          "nationality": {
            "type": "string",
            "description": "Nationality of the author",
            "example": "American"
          },
          "biography": {
            "type": "string",
            "description": "Biography of the author",
            "example": "Francis Scott Key Fitzgerald was an American novelist, essayist, and short story writer."
          },
          "website": {
            "type": "string",
            "description": "Website of the author",
            "example": "https://www.fscottfitzgerald.com"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the author is active",
            "example": true
          }
        }
      },
      "AuthorsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of authors returned"
          },
          "authors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Author"
            }
          }
        }
      }
    }
  }
}